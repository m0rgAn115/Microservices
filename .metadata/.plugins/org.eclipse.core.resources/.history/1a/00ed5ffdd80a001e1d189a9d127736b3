package com.formacionbdi.springboot.app.gateway.filters.factory;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.http.ResponseCookie;
import org.springframework.stereotype.Component;

import lombok.Getter;
import lombok.Setter;
import reactor.core.publisher.Mono;


@Component
public class EjemploGatewayFilterFactory extends AbstractGatewayFilterFactory<EjemploGatewayFilterFactory.Configuracion>{
	
	private final Logger logger = LoggerFactory.getLogger(EjemploGatewayFilterFactory.class);
	
	
	
	@Override
	public GatewayFilter apply(Configuracion config) {
		
		return (exchange, chain) -> {
			logger.info("Ejecutando pre gateway filter factory: "+config.mensaje);//pre
			return chain.filter(exchange).then(Mono.fromRunnable(() -> {
				Optional.ofNullable(config.cookieValor).ifPresent(cookie -> {
					exchange.getResponse().addCookie(ResponseCookie.from(config.cookieNombre,cookie).build());
				});
				
				
				logger.info("Ejecutando post gateway filter factory: "+config.mensaje);
				
			}));
		};
	}
	
	//ademas de las cookies tambien podemos cambiar las cabezeras o request
		//de forma dinamica usando mutate
		@Getter
		@Setter
		public static class Configuracion {
			private String mensaje;
			private String cookieValor;
			private String cookieNombre;
		}
	
}
